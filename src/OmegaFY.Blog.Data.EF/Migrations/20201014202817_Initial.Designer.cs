// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OmegaFY.Blog.Data.EF.Context;

namespace OmegaFY.Blog.Data.EF.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201014202817_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Comentarios.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostagemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_ComentarioId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("PostagemId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Comentarios.Reacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComentarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("ReacaoUsuario")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("SubComentarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_ReacaoId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ComentarioId");

                    b.HasIndex("SubComentarioId");

                    b.ToTable("Reacoes");
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Comentarios.SubComentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComentarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostagemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_SubComentarioId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ComentarioId");

                    b.ToTable("SubComentarios");
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Postagens.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Estrelas")
                        .HasColumnType("tinyint");

                    b.Property<float>("Nota")
                        .HasColumnType("real");

                    b.Property<Guid>("PostagemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_AvaliacaoId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("PostagemId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Postagens.Compartilhamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCompartilhamento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PostagemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_CompartilhamentoId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("PostagemId");

                    b.ToTable("Compartilhamentos");
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Postagens.Postagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Oculta")
                        .HasColumnType("bit");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_PostagemId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Postagens");
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Comentarios.Comentario", b =>
                {
                    b.HasOne("OmegaFY.Blog.Domain.Entities.Postagens.Postagem", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("PostagemId")
                        .HasConstraintName("FK_ComentarioPostagemId")
                        .IsRequired();

                    b.OwnsOne("OmegaFY.Blog.Domain.ValueObjects.Shared.Corpo", "Corpo", b1 =>
                        {
                            b1.Property<Guid>("ComentarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Conteudo")
                                .IsRequired()
                                .HasColumnName("Corpo")
                                .HasColumnType("varchar(1000)");

                            b1.HasKey("ComentarioId");

                            b1.ToTable("Comentarios");

                            b1.WithOwner()
                                .HasForeignKey("ComentarioId");
                        });

                    b.OwnsOne("OmegaFY.Blog.Domain.ValueObjects.Shared.DetalhesModificacao", "DetalhesModificacao", b1 =>
                        {
                            b1.Property<Guid>("ComentarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnName("DataCriacao")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataModificacao")
                                .HasColumnName("DataModificacao")
                                .HasColumnType("datetime2");

                            b1.HasKey("ComentarioId");

                            b1.ToTable("Comentarios");

                            b1.WithOwner()
                                .HasForeignKey("ComentarioId");
                        });
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Comentarios.Reacao", b =>
                {
                    b.HasOne("OmegaFY.Blog.Domain.Entities.Comentarios.Comentario", null)
                        .WithMany("Reacoes")
                        .HasForeignKey("ComentarioId")
                        .IsRequired();

                    b.HasOne("OmegaFY.Blog.Domain.Entities.Comentarios.SubComentario", null)
                        .WithMany("Reacoes")
                        .HasForeignKey("SubComentarioId");
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Comentarios.SubComentario", b =>
                {
                    b.HasOne("OmegaFY.Blog.Domain.Entities.Comentarios.Comentario", null)
                        .WithMany("SubComentarios")
                        .HasForeignKey("ComentarioId")
                        .HasConstraintName("FK_SubComentarioComentarioId")
                        .IsRequired();

                    b.OwnsOne("OmegaFY.Blog.Domain.ValueObjects.Shared.Corpo", "Corpo", b1 =>
                        {
                            b1.Property<Guid>("SubComentarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Conteudo")
                                .IsRequired()
                                .HasColumnName("Corpo")
                                .HasColumnType("varchar(1000)");

                            b1.HasKey("SubComentarioId");

                            b1.ToTable("SubComentarios");

                            b1.WithOwner()
                                .HasForeignKey("SubComentarioId");
                        });

                    b.OwnsOne("OmegaFY.Blog.Domain.ValueObjects.Shared.DetalhesModificacao", "DetalhesModificacao", b1 =>
                        {
                            b1.Property<Guid>("SubComentarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnName("DataCriacao")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataModificacao")
                                .HasColumnName("DataModificacao")
                                .HasColumnType("datetime2");

                            b1.HasKey("SubComentarioId");

                            b1.ToTable("SubComentarios");

                            b1.WithOwner()
                                .HasForeignKey("SubComentarioId");
                        });
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Postagens.Avaliacao", b =>
                {
                    b.HasOne("OmegaFY.Blog.Domain.Entities.Postagens.Postagem", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("PostagemId")
                        .HasConstraintName("FK_AvaliacaoPostagemId")
                        .IsRequired();
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Postagens.Compartilhamento", b =>
                {
                    b.HasOne("OmegaFY.Blog.Domain.Entities.Postagens.Postagem", null)
                        .WithMany("Compartilhamentos")
                        .HasForeignKey("PostagemId")
                        .HasConstraintName("FK_CompartilhamentoPostagemId")
                        .IsRequired();
                });

            modelBuilder.Entity("OmegaFY.Blog.Domain.Entities.Postagens.Postagem", b =>
                {
                    b.OwnsOne("OmegaFY.Blog.Domain.ValueObjects.Postagens.Cabecalho", "Cabecalho", b1 =>
                        {
                            b1.Property<Guid>("PostagemId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("SubTitulo")
                                .IsRequired()
                                .HasColumnName("SubTitulo")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Titulo")
                                .IsRequired()
                                .HasColumnName("Titulo")
                                .HasColumnType("varchar(30)");

                            b1.HasKey("PostagemId");

                            b1.ToTable("Postagens");

                            b1.WithOwner()
                                .HasForeignKey("PostagemId");
                        });

                    b.OwnsOne("OmegaFY.Blog.Domain.ValueObjects.Shared.Corpo", "Corpo", b1 =>
                        {
                            b1.Property<Guid>("PostagemId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Conteudo")
                                .IsRequired()
                                .HasColumnName("Corpo")
                                .HasColumnType("varchar(8000)");

                            b1.HasKey("PostagemId");

                            b1.ToTable("Postagens");

                            b1.WithOwner()
                                .HasForeignKey("PostagemId");
                        });

                    b.OwnsOne("OmegaFY.Blog.Domain.ValueObjects.Shared.DetalhesModificacao", "DetalhesModificacao", b1 =>
                        {
                            b1.Property<Guid>("PostagemId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnName("DataCriacao")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataModificacao")
                                .HasColumnName("DataModificacao")
                                .HasColumnType("datetime2");

                            b1.HasKey("PostagemId");

                            b1.ToTable("Postagens");

                            b1.WithOwner()
                                .HasForeignKey("PostagemId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
